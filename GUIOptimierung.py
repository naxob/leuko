import wx
import os
import wx.grid
import matplotlib.pyplot as plt
from numpy import *
from copy import deepcopy


"""import matplotlib.pyplot as plt
from numpy import *
#import matplotlib.gridspec as gridspec

fig = plt.figure()
#gs = gridspec.GridSpec(2,1,height_ratios=[1,4]  )

#ax1 = plt.subplot(gs[0])
#ax2 = plt.subplot(gs[1])

ax2 = fig.add_axes([0.1, 0.1, 0.8, 0.8])
ax2.grid(b=True, which='major')
x = range(16)
y = range(16)
data1 = [10, 10.2, 10.3, 10.1, 8.3, 9.4, 8.4, 8.6, 9.8, 11, 11.2, 10.3, 9.7, 9.8, 6.2, 6]
data2 = [9, 9.9, 10.1, 9.8, 4, 8, 4.4, 4.1, 8.1, 9.7, 10, 7.7, 8.3, 8.4, 5.8, 6]

plt.plot(0,[1,2,3,4],'ro-')
#plt.plot(data2,'ro-')
#plt.errorbar(x, data1, yerr=0.3)
#plt.errorbar(y, data2, yerr=0.2)
plt.errorbar([0,1,2,3,4,5],[3,4,3,1,1,0],yerr=[0.1,0.2,0.1,0.5,0.1,0.2])
plt.ylim((0, 5))

plt.show()
"""

def taketime(f,c,*args):    
    import time 
    start= time.clock()
    for i in range(c):
        f(*args)
    end= time.clock()
    time= (end-start)/c    
    print '\ndurchlaufe: '+str(c) +'\nzeit pro durchlauf: '+str(time) +'\nzeit gesamt: '+str(c*time)
    return time  

def newmeth(values):
    e=0
    for x in values:
        try :
            i=0
            while True:
                temp=[]
                for y in x:
                    temp.append(y[i])
                #print 'pop '+str(i)+' '+ str(temp)
                plt.plot(range(len(temp)),temp,'.b')
                e=e+1
                i=i+1
        except IndexError:
            pass
    print e
    #plt.show()
    plt.close()

def oldmeth(values):
            e=0
            i=0
            for x in values:
                i=0
                for y in x:
                    for z in y:
                        plt.plot(i,z,'.b')
                        e=e+1
                    i=i+1
            print e
            #plt.show()
            plt.close()
            
#print 'rohwerte ' + str(rohwerte)

values = [[[5.208148, 3.856906, 4.618201], [5.581069, 5.304201, 6.107177], [5.583812, 5.119011, 6.018264], [6.780256, 6.591732, 7.420943], [7.88841, 7.400091, 7.923624], [7.822044, 7.875948, 7.736727], [5.200209, 4.919648, 6.040194], [6.252148, 5.483389, 5.98448], [8.335037, 8.429649, 9.07056], [4.065107, 4.435935, 4.94603], [7.096251, 6.796585, 7.387024], [6.253515, 6.573003, 6.682736], [7.28299, 7.007628, 7.308725], [9.651969, 9.485592, 10.19747], [7.916404, 7.923687, 8.109077], [7.676571, 7.134148, 8.558795], [5.998681, 6.545659, 7.183641], [6.681634, 6.828182, 7.516214], [7.56093, 7.404675, 8.422455], [8.039328, 7.680675, 8.344068], [7.985474, 7.949153, 8.673617], [2.491029, 2.950559, 4.253962], [8.492989, 7.933398, 8.150532], [5.993575, 5.750837, 6.163512]],
[[4.420412, 4.187621, 5.146029, 2.887514, 4.27254, 5.521056, 3.090646, 4.826795, 3.854121], [4.974221, 5.56424, 6.113735, 4.749203, 5.54978, 5.417761, 4.392858, 4.999867, 5.726738], [5.006443, 5.233409, 6.716087, 4.954105, 6.149085, 6.232173, 4.606192, 5.459988, 6.334941], [6.781529, 6.977609, 6.960534, 6.432296, 6.795813, 7.711492, 6.804957, 6.81908, 7.494961], [7.663682, 7.756181, 7.409182, 8.097313, 7.701691, 8.051974, 8.262228, 7.623104, 7.710206], [7.936753, 8.112076, 8.090308, 8.036867, 7.868166, 8.076068, 8.254068, 7.991999, 7.456775], [5.234753, 4.584249, 5.274009, 5.46879, 5.416194, 5.628337, 5.056201, 5.756591, 5.516158], [5.561551, 5.514196, 6.217614, 5.826776, 6.212836, 5.902485, 6.014125, 6.130394, 5.859806], [8.963774, 9.47671, 9.992208, 8.856773, 8.292979, 9.265324, 8.285548, 8.813093, 8.588551], [4.395191, 4.775228, 6.287082, 4.25347, 4.235337, 4.825919, 4.301311, 4.687175, 4.491566], [6.779521, 7.248595, 7.911605, 7.346687, 7.426458, 7.325856, 7.165062, 7.464417, 7.301777], [6.720881, 6.752228, 7.432106, 6.829571, 6.928901, 6.811303, 7.138803, 6.600315, 6.935129], [6.550652, 7.098108, 7.510951, 6.464728, 6.953759, 6.49962, 7.101415, 6.880146, 7.157195], [9.952159, 10.48956, 11.00173, 10.05719, 9.481062, 10.18993, 9.502597, 9.802186, 9.384287], [7.759287, 8.072448, 8.34563, 7.716464, 8.101598, 8.296576, 7.866546, 8.358614, 7.796195], [8.076637, 8.479601, 9.252001, 8.140913, 7.249753, 8.671772, 7.9313, 8.041945, 7.61948], [6.763122, 6.692874, 7.002446, 6.411544, 5.767189, 6.829318, 6.133818, 5.92646, 5.924759], [6.490887, 7.179345, 7.237892, 7.095804, 6.677108, 6.828619, 6.656887, 6.679102, 6.598435], [7.705324, 8.077219, 8.355655, 7.830752, 7.507707, 8.214221, 6.9818, 7.623295, 6.822807], [8.093384, 8.716998, 8.946162, 7.854662, 7.472647, 8.206901, 7.371565, 7.643939, 7.249219], [8.099294, 8.698443, 8.82864, 7.992668, 7.198553, 8.680895, 7.82411, 7.8517, 7.868021], [2.767133, 2.950691, 3.578194, 2.898754, 2.392702, 3.421858, 2.28101, 2.436202, 3.29996], [8.211477, 8.563873, 8.180374, 8.579865, 8.645555, 7.991052, 8.582409, 7.888633, 7.994466], [6.200627, 5.69593, 5.871135, 5.970676, 5.754993, 6.815498, 6.247602, 6.139235, 5.920146]],
[[2.982579, 2.989295, 2.778801], [4.650754, 4.81422, 4.864355], [4.754599, 3.99239, 4.352004], [7.179169, 6.801305, 6.484047], [7.867576, 7.34304, 6.825114], [8.312869, 7.945393, 7.865054], [4.904307, 5.392716, 5.387725], [5.86556, 4.754105, 5.332539], [8.329299, 7.968398, 7.355723], [4.111786, 5.237284, 4.324183], [7.562678, 7.007386, 6.946102], [6.707009, 6.133654, 6.415293], [6.762228, 5.035019, 6.842373], [9.472315, 8.919771, 8.654129], [7.330042, 7.667806, 7.338192], [7.509818, 7.195, 6.65743], [6.377191, 5.544002, 5.189353], [6.844277, 5.745057, 6.246146], [7.78453, 6.555005, 6.846139], [7.901449, 7.344572, 7.368361], [7.992424, 7.382034, 7.140575], [2.658859, 2.727294, 1.957944], [8.312296, 8.458834, 8.2747], [5.179656, 5.36482, 5.225448]],
[[3.548894, 3.419964, 3.267652, 3.6481, 3.287685], [4.481242, 5.44431, 4.780517, 5.326622, 4.599895], [4.912463, 5.29271, 5.445232, 5.451807, 4.968131], [6.534122, 6.902216, 6.929272, 6.713932, 7.065702], [7.121187, 7.786956, 7.370878, 7.913406, 7.926323], [7.620643, 7.841385, 7.911946, 8.215693, 7.345538], [5.652388, 5.554803, 4.747883, 5.444762, 4.611647], [5.593753, 5.547522, 5.232306, 6.249947, 5.229547], [7.671128, 7.915981, 8.267879, 8.308452, 7.916473], [3.911809, 4.394929, 4.011796, 4.565914, 3.736547], [6.803552, 7.177824, 7.045824, 7.400641, 6.989769], [6.482844, 6.578277, 6.309853, 6.6063, 6.299486], [6.372715, 6.617693, 6.565038, 7.497246, 6.514267], [8.938444, 9.013141, 9.399236, 9.561281, 9.10679], [7.714562, 7.704663, 7.444373, 8.202391, 7.508609], [7.070879, 7.572503, 7.307683, 8.17798, 7.248854], [5.398315, 5.494536, 6.382014, 5.76073, 5.583119], [6.391132, 6.08237, 6.692116, 6.350447, 6.207737], [7.090759, 7.121751, 7.322966, 7.45314, 7.13217], [7.744545, 7.617923, 7.82731, 8.063888, 7.112111], [7.113645, 7.642231, 7.906063, 8.120443, 6.962269], [3.136175, 2.121248, 2.202365, 1.965888, 2.309946], [8.176979, 8.050029, 8.268483, 8.753799, 8.418043], [5.088842, 5.295302, 6.320735, 6.213931, 5.859531]]]

taketime(newmeth, 1,values)
taketime(oldmeth, 1,values)




